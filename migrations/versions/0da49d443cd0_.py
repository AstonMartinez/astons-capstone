"""empty message

Revision ID: 0da49d443cd0
Revises:
Create Date: 2023-09-15 22:39:09.198407

"""
from alembic import op
import sqlalchemy as sa

import os
environment = os.getenv("FLASK_ENV")
SCHEMA = os.environ.get("SCHEMA")


# revision identifiers, used by Alembic.
revision = '0da49d443cd0'
down_revision = None
branch_labels = None
depends_on = None

def upgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=500), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('points', sa.Integer(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('bug_reports',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_email', sa.String(length=255), nullable=False),
    sa.Column('bug_description', sa.String(length=1000), nullable=False),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(length=255), nullable=False),
    sa.Column('description', sa.String(length=500), nullable=False),
    sa.Column('strength', sa.Integer(), nullable=False),
    sa.Column('str_gear_num', sa.Integer(), nullable=False),
    sa.Column('str_class_bonus', sa.Integer(), nullable=False),
    sa.Column('constitution', sa.Integer(), nullable=False),
    sa.Column('const_gear_num', sa.Integer(), nullable=False),
    sa.Column('const_class_bonus', sa.Integer(), nullable=False),
    sa.Column('intelligence', sa.Integer(), nullable=False),
    sa.Column('int_gear_num', sa.Integer(), nullable=False),
    sa.Column('int_class_bonus', sa.Integer(), nullable=False),
    sa.Column('perception', sa.Integer(), nullable=False),
    sa.Column('perc_gear_num', sa.Integer(), nullable=False),
    sa.Column('perc_class_bonus', sa.Integer(), nullable=False),
    sa.Column('cost', sa.Integer(), nullable=False),
    sa.Column('image', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('feature_requests',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('category', sa.String(length=500), nullable=False),
    sa.Column('response', sa.String(length=1000), nullable=False),
    sa.Column('description', sa.String(length=1500), nullable=False),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('users',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('username', sa.String(length=40), nullable=False),
    sa.Column('email', sa.String(length=255), nullable=False),
    sa.Column('bio', sa.String(length=500), nullable=True),
    sa.Column('experience_points', sa.Integer(), nullable=False),
    sa.Column('level', sa.Integer(), nullable=False),
    sa.Column('date_joined', sa.DateTime(), nullable=False),
    sa.Column('gold', sa.Integer(), nullable=False),
    sa.Column('health', sa.Integer(), nullable=False),
    sa.Column('hashed_password', sa.String(length=255), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email'),
    sa.UniqueConstraint('username')
    )
    op.create_table('avatars',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('shirt', sa.Text(), nullable=False),
    sa.Column('hair', sa.Text(), nullable=False),
    sa.Column('bangs', sa.Text(), nullable=False),
    sa.Column('skin', sa.Text(), nullable=False),
    sa.Column('background', sa.Text(), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('dailies',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=False),
    sa.Column('checklist', sa.Text(), nullable=True),
    sa.Column('difficulty', sa.String(length=50), nullable=True),
    sa.Column('start_date', sa.DateTime(), nullable=False),
    sa.Column('repeats', sa.String(), nullable=False),
    sa.Column('num_repeats', sa.Integer(), nullable=False),
    sa.Column('day_of_repeat', sa.String(), nullable=True),
    sa.Column('count', sa.Integer(), nullable=True),
    sa.Column('tags', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('habits',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=False),
    sa.Column('type', sa.String(length=255), nullable=False),
    sa.Column('difficulty', sa.String(length=255), nullable=False),
    sa.Column('tags', sa.String(length=255), nullable=True),
    sa.Column('pos_count', sa.Integer(), nullable=True),
    sa.Column('neg_count', sa.Integer(), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('notes', sa.Text(), nullable=True),
    sa.Column('cost', sa.Integer(), nullable=True),
    sa.Column('tags', sa.String(length=1000), nullable=True),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('to_dos',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('title', sa.String(length=255), nullable=False),
    sa.Column('notes', sa.String(length=500), nullable=False),
    sa.Column('difficulty', sa.String(length=255), nullable=False),
    sa.Column('checklist', sa.String(length=1000), nullable=True),
    sa.Column('due_date', sa.DateTime(), nullable=True),
    sa.Column('tags', sa.String(length=255), nullable=True),
    sa.Column('status', sa.String(length=255), nullable=False),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_achievements',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('achievement_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['achievement_id'], ['achievements.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_equipment',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('equipment_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['equipment_id'], ['equipment.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    op.create_table('user_rewards',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('user_id', sa.Integer(), nullable=False),
    sa.Column('reward_id', sa.Integer(), nullable=False),
    sa.ForeignKeyConstraint(['reward_id'], ['rewards.id'], ),
    sa.ForeignKeyConstraint(['user_id'], ['users.id'], ),
    sa.PrimaryKeyConstraint('id')
    )
    # ### end Alembic commands ###
    if environment == "production":
        op.execute(f"ALTER TABLE achievements SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE bug_reports SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE equipment SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE feature_requests SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE users SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE avatars SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE dailies SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE habits SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE rewards SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE to_dos SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE user_achievements SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE user_equipment SET SCHEMA {SCHEMA};")
        op.execute(f"ALTER TABLE user_rewards SET SCHEMA {SCHEMA};")


def downgrade():
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_rewards')
    op.drop_table('user_equipment')
    op.drop_table('user_achievements')
    op.drop_table('to_dos')
    op.drop_table('rewards')
    op.drop_table('habits')
    op.drop_table('dailies')
    op.drop_table('avatars')
    op.drop_table('users')
    op.drop_table('feature_requests')
    op.drop_table('equipment')
    op.drop_table('bug_reports')
    op.drop_table('achievements')
    # ### end Alembic commands ###
